# generated by datamodel-codegen:
#   filename:  project_info_reply.json
#   timestamp: 2025-07-02T12:45:46+00:00

from __future__ import annotations

from typing import List, Union, Any

from pydantic import BaseModel


class Result(BaseModel):
    automation_run_active_count: int
    automation_run_completed_count: int
    automation_run_count: int
    automation_source_active_count: int
    automation_source_count: int
    automation_source_retired_count: int
    completed_at: Union[str, None]
    created_at: str
    created_by: int
    id: int
    is_completed: bool
    milestone_active_count: int
    milestone_completed_count: int
    milestone_count: int
    name: str
    note: Union[str, None]
    run_active_count: int
    run_closed_count: int
    run_count: int
    session_active_count: int
    session_closed_count: int
    session_count: int
    updated_at: str
    updated_by: int


class Model(BaseModel):
    expands: List
    result: Result


def from_data(json_data) -> Model:
    import json
    data = json_data
    if isinstance(json_data, str):
        data = json.loads(data)
    return Model.model_validate(data)


def result_from_data(json_data) -> Result:
    import json
    data = json_data
    if isinstance(json_data, str):
        data = json.loads(data)
    return Result.model_validate(data)
